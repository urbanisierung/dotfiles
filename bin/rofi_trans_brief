#!/usr/bin/env bash

touch $transHistory

transText_org="$@"
transText=$(echo "$@" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

if [[ "$verbose" == "1" ]]; then
    echo ok >>/dev/stderr
    echo $transText >>/dev/stderr
fi

function refresh {
    sh -c 'sleep 0.05 ; env default="brief" rofi_trans' &
    pkill -u $USER rofi
}

function translate {
    if [[ $verbose ]]; then set -x; fi

    trans -t $transTarget -e $primary_translator "$1"

    if [[ $verbose ]]; then set +x; fi
}

function main {

    echo "starting"

    if [[ -n $transText ]]; then

        echo $transText

        if [[ ! $transText == '#'* ]]; then
            # translate input
            transResult="$(translate "$transText")"

            rofi -e "$transResult"

            # If the translation result is empty, that might means the translator is not available at this moment.
            # Switch to secondary transltor and do that again
            if [[ -z "$transResult" ]]; then
                primary_translator=$secondary_translator
                transResult="$(translate "$transText")"
            fi

            echo $transResult

            echo "===================1"

            printf "#\t%-40s\t%s\n" "$transText" "$transResult" >>$transHistory
        else
            transText="$(echo "$transText" | cut -f2 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            translate "$transText"

            # update history. let the target entry move to top.
            # pattern="$(echo "$transText_org" | sed -e 's/[]\/$*.^[]/\\&/g')"
            pattern="$(echo "$transText_org")"

            echo $pattern

            historyContent="$(cat $transHistory)"
            echo "===================2"
            echo $historyContent
            echo "$historyContent" | sed "/^${pattern}$/d" >$transHistory
            echo "$transText_org" >>$transHistory
        fi

        # Auto refresh content of each script mode
        if [[ "$auto_refresh" == "1" ]]; then
            refresh
        fi
    fi

    echo "finish"

    tac $transHistory
}

main
